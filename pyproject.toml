[build-system]
build-backend = "uv_build"
requires = [ "uv-build>=0.8,<0.9" ]

[project]
name = "dgpydev"
version = "0.1.0"
description = "dgpy-libs development"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
  "Private :: Do Not Upload",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dependencies = [
  "aiopen",
  "asyncify",
  "dgpylibs",
  "dgpytest",
  "fmts",
  "funkify",
  "h5[cli]",
  "jsonbourne",
  "lager",
  "listless",
  "requires",
  "shellfish",
  "xtyping",
]

optional-dependencies.docs = [
  "importlib-metadata>=4.6; python_version<'3.10'",
  "markdown>=3.6",
  "markdown-callouts>=0.4",
  "mkdocs>=1.6",
  "mkdocs-autorefs>=1.4",
  "mkdocs-jupyter>=0.25.1",
  "mkdocs-material>=9.5.42",
  "mkdocs-material-extensions>=1.3.1",
  "mkdocstrings>=0.25.2",
  "mkdocstrings-python>=1.10.9",
  "pymdown-extensions>=6.3",
  "typing-extensions>=4.1; python_version<'3.10'",
]
scripts.dgpydev = "dgpydev.cli:main"

[dependency-groups]
dev = [
  "anyio>=4.6.2.post1",
  "httpx>=0.28.1",
  "ipython>=8.37.0",
  "mypy>=1.11.1",
  "nox>=2024.4.15",
  "orjson>=3.10.18",
  "pydantic>=2.11.5",
  "pytest-cov>=6.1.1",
  "rich>=13.9.3",
  "ruff>=0.12.10",
  "tomli>=2.0.1",
]

[tool.uv.build-backend]
module-name = "dgpydev"
module-root = ""

[tool.uv.workspace]
members = [
  "libs/aiopen",
  "libs/asyncify",
  "libs/dgpylibs",
  "libs/dgpytest",
  "libs/fmts",
  "libs/funkify",
  "libs/h5",
  "libs/jsonbourne",
  "libs/lager",
  "libs/listless",
  "libs/requires",
  "libs/shellfish",
  "libs/xtyping",
]

[tool.uv.sources]
aiopen = { workspace = true }
asyncify = { workspace = true }
dgpylibs = { workspace = true }
dgpytest = { workspace = true }
fmts = { workspace = true }
funkify = { workspace = true }
h5 = { workspace = true }
jsonbourne = { workspace = true }
lager = { workspace = true }
listless = { workspace = true }
requires = { workspace = true }
shellfish = { workspace = true }
xtyping = { workspace = true }

[tool.ruff]
extend = "./ruff.toml"

[tool.codespell]
skip = "*/.nox/*,*/.nox_win/*,*/.pytype/*,*/.mypy_cache/*,*/.venv/*,*/node_modules/*,./poetry.lock"
ignore-words-list = "opps,te"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
  "-ra",
  "--strict-config",
  "--strict-markers",
  "--doctest-modules",
  "--disable-warnings",
]
testpaths = [
  "libs/src/aiopen",
  "libs/src/asyncify",
  "libs/src/dgpylibs",
  "libs/src/dgpytest",
  "libs/src/fmts",
  "libs/src/funkify",
  "libs/src/h5",
  "libs/src/jsonbourne",
  "libs/src/lager",
  "libs/src/listless",
  "libs/src/requires",
  "libs/src/shellfish",
  "libs/src/xtyping",
  "tests",
]

xfail_strict = true
filterwarnings = [
  "error",
  'ignore:"@coroutine" decorator is deprecated since Python 3\.8, use "async def" instead:DeprecationWarning',
  "ignore::RuntimeWarning",
  "ignore::pytest.PytestUnraisableExceptionWarning",
  "ignore::DeprecationWarning",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "timeout",
  "skip: skip test",
  "anyio: anyio tests",
  "aio: asyncio tests",
  "basic: basic tests",
  "version",
]
# =============================================================================
# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
# =============================================================================
#  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\
# /  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \
# =============================================================================
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
# =============================================================================

[tool.mypy]
plugins = [ "pydantic.mypy" ]
python_version = "3.11"
show_error_codes = true
follow_imports = 'silent'
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
ignore_missing_imports = true
implicit_reexport = false
strict = true
strict_equality = true
show_error_context = true
enable_error_code = [ "ignore-without-code", "redundant-expr", "truthy-bool" ]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_decorators = false
disallow_any_generics = false
disallow_untyped_defs = true

[tool.pyright]
pythonVersion = "3.11"
include = [
  "libs/aiopen/src",
  "libs/asyncify/src",
  "libs/dgpylibs/src",
  "libs/dgpytest/src",
  "libs/fmts/src",
  "libs/funkify/src",
  "libs/h5/src",
  "libs/jsonbourne/src",
  "libs/lager/src",
  "libs/listless/src",
  "libs/requires/src",
  "libs/shellfish",
  "libs/listless/src",
  "libs/xtyping/src",
]
extraPaths = [
  "libs/aiopen/src",
  "libs/asyncify/src",
  "libs/funkify/src",
  "libs/fmts/src",
  "libs/h5/src",
  "libs/jsonbourne/src",
  "libs/lager/src",
  "libs/listless/src",
  "libs/requires/src",
  "libs/shellfish/src",
  "libs/listless/src",
  "libs/xtyping/src",
]
exclude = [
  "**/.pytype",
  "**/node_modules",
  "**/__pycache__",
  "docs",
  "**/.venv",
  "**/.nox",
  "**/.nox_win",
]
reportGeneralTypeIssues = false
reportInvalidTypeVarUse = false
reportMissingImports = true
reportMissingTypeStubs = false
