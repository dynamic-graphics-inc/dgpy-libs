[tool.poetry]
name = "dgpylibs"
version = "0.0.2"
description = "\"Dynamic Graphics Python\""
authors = ["jessekrubin <jesse@dgi.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7"

[tool.poetry.dev-dependencies]
flake8 = "^4.0.1"
black = "^21.12b0"
isort = "^5.7.0"
pytest = "^6.2.2"
pytest-asyncio = "^0.16.0"
mkdocs = "^1.1.2"
mkdocs-material = "^7.1.2"
mkdocstrings = "^0.16.2"
h5py = "^3.4.0"
pytest-cov = "^2.12.1"
mypy = "^0.931"
nox = "^2022.1.7"
pydantic = "^1.8.2"
orjson = "^3.6.3"
python-rapidjson = "^1.4"

aiopen = { path = "./libs/aiopen/", develop = true }
asyncify = { path = "./libs/asyncify/", develop = true }
jsonbourne = { path = "./libs/jsonbourne/", develop = true }
funkify = { path = "./libs/funkify/", develop = true }
h5 = { path = "./libs/h5/", develop = true }
lager = { path = "./libs/lager/", develop = true }
listless = { path = "./libs/listless/", develop = true }
requires = { path = "./libs/requires/", develop = true }
shellfish = { path = "./libs/shellfish/", develop = true }
xtyping = { path = "./libs/xtyping/", develop = true }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# =============================================================================
# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
# =============================================================================
#  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\
# /  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \
# =============================================================================
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
# =============================================================================

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
skip-string-normalization = false
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.nox_win
    | \.nox_lin
    | \.nox_wsl
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | .pytype
  )/
)
'''

# =============================================================================
# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
# =============================================================================
#  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\
# /  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \
# =============================================================================
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
# =============================================================================
[tool.isort]
profile = "black"
line_length = 88
include_trailing_comma = true
lines_between_types = 1
multi_line_output = 3
skip_glob = ["*/setup.py", ".nox*", "*/.nox_win/**", "*/.pytype/*", "*/loguru_tests/*"]
force_grid_wrap = 0
ensure_newline_before_comments = true
combine_as_imports = true
use_parentheses = true
known_first_party = [
    "aiopen",
    "funkify",
    "lager",
    "requires",
    "jsonbourne",
]
known_third_party = [
    "pytest",
    "pydantic",
    "starlette",
    "loguru"
]




# =============================================================================
# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
# =============================================================================
#  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\
# /  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \
# =============================================================================
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
# =============================================================================

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "libs/aiopen",
    "libs/asyncify",
    "libs/funkify",
    "libs/h5",
    "libs/jsonbourne",
    "libs/lager",
    "libs/requires",
    "libs/shellfish",
    "libs/xtyping",
]

# =============================================================================
# /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
# =============================================================================
#  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\  /\
# /  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \/  \
# =============================================================================
# \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
# =============================================================================

[tool.mypy]
python_version = "3.9"
show_error_codes = true
follow_imports = 'silent'
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_return_any = true
ignore_missing_imports = true
implicit_reexport = false
strict_equality = true


[tool.pyright]
include = ["libs"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs",
    "**/.nox",
    "**/.nox_win"
]
stubPath = "src/stubs"
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.8"
