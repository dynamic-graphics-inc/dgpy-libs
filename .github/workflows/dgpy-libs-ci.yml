name: dgpy-libs-ci

on: [push, pull_request]

jobs:
  fmtc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"
      - name: ruff-check
        run: |
          python -m pip install --upgrade pip
          pip install -U ruff
          ruff format --check .
          ruff check --select "I" .
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: install-uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.11"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: ruff-check
        run: |
          uvx ruff --version
          uvx ruff check .

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3
        uses: actions/setup-python@v6
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: mypy
        run: |
          pip install nox
          nox -s lint

  test:
    runs-on: ubuntu-latest

    # matrix of python versions to test against
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    # set uv environment variables
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python 3
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: uv-sync
        run: uv sync --all-extras --dev

      - name: test-dgpydev
        run: |
          uv run pytest --doctest-modules tests

      - name: test listless
        run: |
          cd libs/listless
          uv run pytest --doctest-modules

      - name: test fmts
        run: |
          cd libs/fmts
          uv run pytest --doctest-modules

      - name: test xtyping
        run: |
          cd libs/xtyping
          uv run pytest

      - name: test funkify
        run: |
          cd libs/funkify
          uv run pytest --cov=funkify

      - name: test asyncify
        run: |
          cd libs/asyncify
          uv run pytest --cov=asyncify --doctest-modules

      - name: test requires
        run: |
          cd libs/requires
          uv run pytest tests

      - name: test aiopen
        run: |
          cd libs/aiopen
          uv run pytest --doctest-modules

      - name: test lager
        run: |
          cd libs/lager
          uv run pytest tests

      - name: test jsonbourne
        run: |
          cd libs/jsonbourne
          uv run pytest --doctest-modules

      - name: test shellfish
        run: |
          cd libs/shellfish
          uv run pytest --doctest-modules

      - name: test dgpylibs
        run: |
          cd libs/dgpylibs
          uv run pytest --doctest-modules

  mkdocs:
    permissions:
      contents: write
      deployments: write
    needs: [lint, test]
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.11"
      - name: install-uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: uv-sync
        run: uv sync --all-extras --dev
      - name: install docs deps
        run: uv pip install '.[docs]'
      - name: mkdocs build
        if: github.ref != 'refs/heads/main'
        run: uv run mkdocs build
      - name: mkdocs build
        if: github.ref == 'refs/heads/main'
        run: uv run mkdocs gh-deploy --force
