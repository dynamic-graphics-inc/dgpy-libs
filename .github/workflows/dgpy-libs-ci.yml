name: dgpy-libs-ci

on: [push, pull_request]

jobs:
  fmtc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: ruff-check
        run: |
          python -m pip install --upgrade pip
          pip install -U ruff
          ruff format --check .
          ruff check --select "I" .

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup-python-3
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: install-upgrade-pip
        run: |
          python -m pip install --upgrade pip
      - name: install-ruff
        run: |
          pip install ruff
      - name: ruff-version
        run: |
          ruff --version
      - name: ruff-check
        run: |
          ruff check .

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: mypy
        run: |
          pip install nox
          nox -s lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: install-uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      # - name: python-sane-setup
      #   run: |
      #     python -m pip install --upgrade pip
      # - name: setup-poetry
        # id: setup-poetry
        # uses: ./.github/actions/setup-poetry
      - name: uv-sync
        run: uv sync --all-extras --dev
      # - name: Install dependencies
        # run: |
          # poetry install

      - name: test-dgpydev
        run: |
          uv run pytest --doctest-modules tests

      - name: test listless
        run: |
          cd libs/listless
          uv run pytest --doctest-modules

      - name: test fmts
        run: |
          cd libs/fmts
          uv run pytest --doctest-modules

      - name: test xtyping
        run: |
          cd libs/xtyping
          uv run pytest

      - name: test funkify
        run: |
          cd libs/funkify
          uv run pytest --cov=funkify

      - name: test asyncify
        run: |
          cd libs/asyncify
          uv run pytest --cov=asyncify --doctest-modules

      - name: test requires
        run: |
          cd libs/requires
          uv run pytest tests

      - name: test aiopen
        run: |
          cd libs/aiopen
          uv run pytest --doctest-modules

      - name: test lager
        run: |
          cd libs/lager
          uv run pytest tests

      - name: test jsonbourne
        run: |
          cd libs/jsonbourne
          uv run pytest --doctest-modules

      - name: test shellfish
        run: |
          cd libs/shellfish
          uv run pytest --doctest-modules

      - name: test dgpylibs
        run: |
          cd libs/dgpylibs
          uv run pytest --doctest-modules

  # -----
  # NOT SURE IF THESE WERE ACTUALLY DOING ANYTHING USEFUL ANYMORE
  # -----
  # test-jsonbourne:
  #   needs: [lint]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       os:
  #         - ubuntu
  #       python-version: ["3.8", "3.9", "3.10", "3.11"]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install flake8 pytest nox
  #     - name: Test with pytest
  #       run: |
  #         cd libs/jsonbourne
  #         nox -k test

  mkdocs:
    permissions:
      contents: write
      deployments: write
    needs: [lint, test]
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: install-uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: uv-sync
        run: uv sync --all-extras --dev
      # - name: setup-poetry
      #   id: setup-poetry
      #   uses: ./.github/actions/setup-poetry

      # - name: poetry install
        # run: |
          # poetry install
      # - name: install docs deps
        # run: poetry run pip install mkdocs-material mkdocs-jupyter mkdocstrings[python] markdown-callouts
      - name: mkdocs build
        if: github.ref != 'refs/heads/main'
        run: uv run mkdocs build
      - name: mkdocs build
        if: github.ref == 'refs/heads/main'
        run: uv run mkdocs gh-deploy --force
