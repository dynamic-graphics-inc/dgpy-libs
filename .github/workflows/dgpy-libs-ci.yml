name: Python package

on:
  push:
    branches: [ master, main, dev ]
  pull_request:
    branches: [ master, main, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort black

      - name: check isort & black
        run: |
          make lint

      - name: flake8 & mypy
        run: |
          pip install nox
          nox -s lint

  test-xtyping:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.12

      - name: Install dependencies
        run: |
          poetry install

      - name: test xtyping
        run: |
          cd libs/xtyping
          poetry run pytest tests

      - name: test funkify
        run: |
          cd libs/funkify
          poetry run pytest tests

      - name: test requires
        run: |
          cd libs/requires
          poetry run pytest tests

  test-aiopen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.12

      - name: Install dependencies
        run: |
          cd libs
          cd aiopen
          poetry install

      - name: Install dependencies
        run: |
          cd libs/aiopen
          poetry run pytest tests

  lint-jsonbourne:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest nox
      - name: Lint with flake8
        run: |
          cd libs/jsonbourne
          nox -s flake

  test-jsonbourne:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - ubuntu
        python-version: ['3.7', '3.8', '3.9']
#        python-version: [3.7, 3.8, 3.9, 'pypy3']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest nox
      - name: Test with pytest
        run: |
          cd libs/jsonbourne
          nox -k test
#      - name: list dist files
#        run: |
#          ${{ matrix.ls || 'ls -lh' }} dist/
#          twine check dist/*
#      - name: Store dist artifacts
#        uses: actions/upload-artifact@v1
#        with:
#          name: pypi_files
#          path: dist
