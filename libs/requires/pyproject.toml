[project]
name = "requires"
version = "0.10.5"
description = "Runtime imports and dependency utils"
authors = [{ name = "jesse", email = "jesse@dgi.com" }]
readme = "README.md"
keywords = ["requires", "dgpy", "import", "funkify", "decorator"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
]
dependencies = ["funkify>=0.4.0", "xtyping>=0.5.0"]
requires-python = ">=3.8,<4.0"

[tool.poetry.dependencies]
python = "^3.8"
funkify = ">=0.4.0"
xtyping = ">=0.5.0"

[tool.poetry.dev-dependencies]
pytest = "^8.3.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool]
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
  "-ra",
  "--strict-config",
  "--strict-markers",
  "--doctest-modules",
]
xfail_strict = true
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "timeout",
  "skip: skip test",
  "anyio: anyio tests",
  "aio: asyncio tests",
  "version",
]

[tool.coverage.run]
source = ['requires']
branch = true
context = '${CONTEXT}'
omit = ["**/__main__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
exclude_lines = [
  'pragma: nocov',
  'pragma: no cover',
  'raise NotImplementedError',
  'if TYPE_CHECKING:',
  '@overload',
  '\(Protocol\):$',
  'if 0:',
  'if False:',
]

[tool.ruff]
extend = "../../pyproject.toml"

[tool.rye]
managed = true

[tool.hatch]
[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/requires"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
