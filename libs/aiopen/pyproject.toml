[project]
name = "aiopen"
version = "0.6.1"
description = "Async file io"
authors = [{ name = "jesse", email = "jesse@dgi.com" }]
readme = "README.md"
keywords = ["anyio", "fs", "aiopen", "async", "dgpy"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Typing :: Typed",
]
dependencies = [
  "funkify>=0.4.0",
  "xtyping>=0.5.0",
]
requires-python = ">=3.8,<4.0"
[project.urls]
Homepage = "https://github.com/dynamic-graphics-inc/dgpy-libs/tree/main/libs/aiopen"
Repository = "https://github.com/dynamic-graphics-inc/dgpy-libs"

[project.optional-dependencies]
test = [
  "anyio>=4.4.0",
  "pytest>=8.3.2",
  "pytest-asyncio>=0.23.8",
]

[tool]
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
  "--strict-config",
  "--strict-markers",
  "--doctest-modules",
  "--disable-warnings",
  "--cov-config=pyproject.toml",
  "--ignore-glob=*/_meta.py",
]
xfail_strict = true
filterwarnings = [
  "error",
  'ignore:"@coroutine" decorator is deprecated since Python 3\.8, use "async def" instead:DeprecationWarning',
  "ignore::RuntimeWarning",
  "ignore::pytest.PytestUnraisableExceptionWarning",
]
markers = ["asyncio", "anyio", "version"]
testpaths = ["aiopen", "tests"]

[tool.mypy]
# --strict
disallow_any_generics = false
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_return_any = true
ignore_missing_imports = true
implicit_reexport = false
strict_equality = true
# --strict end

[tool.ruff]
extend = "../../pyproject.toml"

# COVERAGE

[tool.coverage.run]
source = ['aiopen']
branch = true
context = '${CONTEXT}'
omit = ["**/__main__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
exclude_lines = [
  'pragma: no cover',
  'raise NotImplementedError',
  'if TYPE_CHECKING:',
  '@overload',
  '\(Protocol\):$',
  'if 0:',
  'if False:',
  'class AsyncBase:',
]

[tool.coverage.paths]
source = ['aiopen/']

[tool.rye]
managed = true

[tool.hatch]
[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/aiopen"]

[tool.hatch.build.targets.sdist]
include = [
  "src",
  "pyproject.toml",
  "README.md",
  "LICENSE",
]

[tool.uv]
dev-dependencies = [
  "pytest-asyncio>=0.23.8",
  "anyio>=4.4.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv.sources]
funkify = { workspace = true }
